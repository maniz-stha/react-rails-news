{"version":3,"sources":["utils/setAuthToken.js","actions/types.js","actions/authActions.js","validatons/isEmpty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/newsReducer.js","reducers/index.js","store.js","components/common/PrivateRoute.js","components/layout/Header.js","components/layout/Footer.js","components/common/TextFieldGroup.js","components/auth/Login.js","components/auth/Register.js","actions/newsAction.js","actions/likeAction.js","components/news/NewsItem.js","components/news/Feeds.js","components/common/HiddenInput.js","components/news/NewsForm.js","components/news/AddNews.js","components/news/EditNews.js","components/common/TextAreaFieldGroup.js","components/comments/CommentItem.js","actions/commentAction.js","components/comments/Comments.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","logoutUser","dispatch","localStorage","removeItem","setCurrentUser","userData","type","payload","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","newsList","news","combineReducers","auth","state","action","errors","listItem","map","comments","likes","newsItem","filter","id","updatedComments","currentNewsItem","comment","updatedNewsItem","middleware","thunk","enhancer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","connect","Component","component","rest","render","props","to","Header","e","preventDefault","this","authLinks","className","name","href","onClick","onLogoutClick","bind","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","aria-describedby","prototypes","PropTypes","func","isRequired","object","Footer","Date","getFullYear","TextFieldGroup","label","error","info","onChange","disabled","htmlFor","classnames","defaultProps","Login","identity","password","onSubmit","history","push","nextProps","setState","event","target","loginUser","post","then","res","data","setItem","jwt_decode","catch","err","response","Register","username","email","password_confirmation","newUser","registerUser","withRouter","getNewsList","get","getNews","addLike","newsId","userId","likeData","news_id","user_id","removeLike","likeId","delete","NewsItem","isNewsLiked","values","includes","confirm","deleteNews","findUserLike","find","key","link","rel","title","source","onLikeClick","fromNow","updated_at","onDeleteClick","Feeds","newsItems","item","HiddenInput","NewsForm","buttonTxt","newsData","match","params","editNews","addNews","put","AddNews","EditNews","TextAreaFieldGroup","CommentItem","comment_id","deleteComment","currentUserId","Comments","commentData","addComment","commentsList","jwtToken","decoded","currentTime","now","exp","location","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b65d6430.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const GET_NEWS_LIST = 'GET_NEWS_LIST';\nexport const SET_NEWS_LIST = 'SET_NEWS_LIST';\nexport const SET_NEWS = 'SET_NEWS';\nexport const ADD_NEWS = 'ADD_NEWS';\nexport const DELETE_NEWS = 'DELETE_NEWS';\nexport const SET_COMMENT = 'SET_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS } from './types';\nimport { SET_CURRENT_USER } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\nexport const registerUser = (userData, history) => dispatch => {\n    \n    axios.post('/api/users/register', userData)\n        .then(user => history.push('/login'))\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            });\n        });\n};\n\n\nexport const loginUser = userData => dispatch => {\n    axios.post('/api/users/login', userData)\n        .then(res => {\n            //save to localStorage \n            const {token}  = res.data\n            localStorage.setItem('jwtToken', token);\n            setAuthToken(token);\n            //set current user\n            const userData = jwt_decode(token);\n            dispatch(setCurrentUser(userData));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            });\n        });\n};  \n\n\nexport const logoutUser = () => dispatch => {\n    //remove jwttoken from localstorage\n    localStorage.removeItem('jwtToken');\n    //Remove auth header for future request\n    setAuthToken(false);\n    //set current user to {}\n    dispatch(setCurrentUser({}));\n}\n\nexport const setCurrentUser = userData => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: userData\n    };\n};","const isEmpty = value =>\n  value === null ||\n  value === undefined ||\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\n  (typeof value === \"string\" && value.trim().length === 0);\n\nexport default isEmpty;\n","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from '../validatons/isEmpty';\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        //set auth state with current user data\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            }\n        //return the initial state on default case\n        default:\n            return state\n    }\n}","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload\n        default:\n            return state;\n    }\n}","import { SET_NEWS_LIST, SET_NEWS, ADD_NEWS, DELETE_NEWS, SET_COMMENT, DELETE_COMMENT } from \"../actions/types\";\nconst initialState = {\n    newsList: null,\n    news: null\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        //set newslist state with list of news\n        case SET_NEWS_LIST:\n            let newsList = action.payload;\n            const listItem = newsList.map(news => ({ ...news.news, comments: news.comments, likes: news.likes, user: news.user }));\n            return {\n                ...state,\n                newsList: listItem\n            }\n        //set single news item\n        case SET_NEWS:\n           const news = action.payload;\n            const newsItem = { ...news.news, comments: news.comments, likes: news.likes, user: news.user };\n            return {\n                ...state,\n                news: newsItem\n            }\n        // add news\n        case ADD_NEWS:\n            return {\n                ...state,\n                newsList: [action.payload, ...state.news.newsList]\n            }\n        //delete news\n        case DELETE_NEWS:\n            return {\n                ...state,\n                newsList: state.newsList.filter(news => news.id !== action.payload)\n            }\n        case SET_COMMENT:\n            let updatedComments = [...state.news.comments, action.payload];\n            const currentNewsItem = { ...state.news, comments: updatedComments, likes: state.news.likes, user: state.news.user}\n            return {\n                ...state,\n                news: currentNewsItem\n            }\n        //delete comment\n        case DELETE_COMMENT:\n            let comments = state.news.comments.filter(comment => comment.id !== action.payload)\n            const updatedNewsItem = { ...state.news, comments: comments, likes: state.news.likes, user: state.news.user}\n            return {\n                ...state,\n                news: updatedNewsItem\n            }\n        //return the initial state on default case\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\n\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\nimport newsReducer from './newsReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer,\n    news: newsReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\nlet enhancer = compose(applyMiddleware(...middleware));\n\n// add redux only if redux devtools extension is installed\nif (window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()) {\n    enhancer = compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n}\nconst store = createStore(\n    rootReducer,\n    initialState,\n    enhancer\n);\n\nexport default store;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => \n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\"/>\n            )\n        }\n    />\n);\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { logoutUser } from '../../actions/authActions';\nimport isEmpty from '../../validatons/isEmpty';\n\nclass Header extends Component {\n  //handle logout button click\n  onLogoutClick(e) {\n    e.preventDefault();\n    this.props.logoutUser();\n  }\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n    const user = !isEmpty(this.props.auth.user) ? this.props.auth.user : null;\n    let authLinks;\n    if (!isAuthenticated) {\n      authLinks = (\n        <ul className=\"navbar-nav mx-10\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">Login</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">Register</Link>\n          </li>\n        </ul>\n      );\n    } else {\n      authLinks = (\n        <ul className=\"navbar-nav mx-10\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/profile\">{user.name}</Link>\n          </li>\n          <li className=\"nav-item\">\n            <a href=\"#\" className=\"nav-link\" onClick={this.onLogoutClick.bind(this)}>Logout</a>\n          </li>\n        </ul>\n      );\n    }\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n        <Link className=\"navbar-brand\" to=\"/\">React Rails news</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n      \n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <div className=\"input-group mx-10\">\n            <input type=\"text\" className=\"form-control\" placeholder=\"Search feeds\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\"><i className=\"fas fa-search\"/></button>\n            </div>\n          </div>\n          { authLinks }\n        </div>\n      </nav>        \n    )\n  }\n}\n\nHeader.prototypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStatesToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStatesToProps, {logoutUser})(Header)","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <footer className=\"mt-5 p-4 text-center\">\n            Copyright &copy; {new Date().getFullYear()} React Rails News\n        </footer>\n    )\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextFieldGroup = ({\n    name,\n    placeholder,\n    value,\n    label,\n    error,\n    info,\n    type,\n    id,\n    onChange,\n    disabled\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={id}>{label}</label>\n            <input type={type}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                name={name}\n                id={id}\n                value={value}\n                onChange={onChange}\n                disabled={disabled}\n            />\n            {info && (<small className=\"form-text text-muted\">{info}</small>)}\n            {error && (<div className=\"invalid-feedback\">{error}</div>)}\n        </div>\n    )\n}\n\nTextFieldGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    error: PropTypes.string,\n    info: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.string,\n};\n\nTextFieldGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextFieldGroup;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { loginUser } from '../../actions/authActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\nclass Login extends Component {\n    constructor() {\n        super();\n        //set default state\n        this.state = {\n            identity: '',\n            password: '',\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/feeds');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // redirect to feeds page when logged in\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push('/feeds');\n        }\n\n        // set errors to state\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        const user = {\n            identity: this.state.identity,\n            password: this.state.password,\n        };\n        this.props.loginUser(user);\n    }\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"login row\">\n                <div className=\"col-md-8 m-auto\">\n                    <h2 className=\"text-center\">Log In</h2>\n                    <form onSubmit={this.onSubmit}>\n                        <TextFieldGroup\n                            type=\"text\"\n                            placeholder=\"Enter email or username\"\n                            label=\"Email Address / Username\"\n                            name=\"identity\"\n                            id=\"identity\"\n                            info=\"Use your email address or username to login\"\n                            value={this.state.identity}\n                            onChange={this.onChange}\n                            error={errors.identity}\n                        />\n                        <TextFieldGroup\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            name=\"password\"\n                            id=\"password\"\n                            label=\"Password\"\n                            value={this.state.password}\n                            onChange={this.onChange}\n                            error={errors.password}\n                        />\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStatesToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(mapStatesToProps, {loginUser})(Login);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { registerUser } from '../../actions/authActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            name: '',\n            email: '',\n            password: '',\n            password_confirmation: '',\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(event) {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password_confirmation: this.state.password_confirmation,\n        };\n        this.props.registerUser(newUser, this.props.history)\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"register row\">\n                <div className=\"col-md-8 m-auto\">\n                    <h2 className=\"text-center\">Register</h2>\n                    <form onSubmit={this.onSubmit}>\n                        <TextFieldGroup\n                            type=\"text\"\n                            id=\"username\"\n                            placeholder=\"Enter Username\"\n                            name=\"username\"\n                            value={this.state.username}\n                            onChange={this.onChange}\n                            error={errors.username}\n                            label=\"Username\"\n                        />\n                        <TextFieldGroup\n                            type=\"text\"\n                            id=\"name\"\n                            placeholder=\"Enter Name\"\n                            name=\"name\"\n                            value={this.state.name}\n                            onChange={this.onChange}\n                            error={errors.name}\n                            label=\"Name\"\n                        />\n                        <TextFieldGroup\n                            type=\"text\"\n                            id=\"email\"\n                            placeholder=\"Enter Email\"\n                            name=\"email\"\n                            value={this.state.email}\n                            onChange={this.onChange}\n                            error={errors.email}\n                            label=\"Email\"\n                        />\n                        <TextFieldGroup\n                            type=\"password\"\n                            id=\"password\"\n                            placeholder=\"Enter Password\"\n                            name=\"password\"\n                            value={this.state.password}\n                            onChange={this.onChange}\n                            error={errors.password}\n                            label=\"Password\"\n                        />\n                        <TextFieldGroup\n                            type=\"password\"\n                            id=\"password_confirmation\"\n                            placeholder=\"Confirm Password\"\n                            name=\"password_confirmation\"\n                            value={this.state.password_confirmation}\n                            onChange={this.onChange}\n                            error={errors.password_confirmation}\n                            label=\"Confirm Password\"\n                        />\n                        <button type=\"submit\" className=\"btn btn-primary btn-lg\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(mapStateToProps, {registerUser})(withRouter(Register));","import axios from 'axios';\n\nimport { GET_ERRORS, DELETE_NEWS } from './types';\nimport { SET_NEWS_LIST, SET_NEWS } from './types';\n\n//get all news list\nexport const getNewsList = () => dispatch => {\n    axios.get('/api/news/')\n        .then(res => { \n            const newsList = res.data;\n            dispatch({\n                type: SET_NEWS_LIST,\n                payload: newsList.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_NEWS_LIST,\n                payload: {}\n            });\n         });\n};\n\n// create news\nexport const addNews = (newsData, history) => dispatch => {\n    axios.post('/api/news', newsData)\n        .then(\n            res => history.push('/feeds')\n        )\n        .catch(\n            err => dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n}\n\n//get specific news by id\nexport const getNews = id => dispatch => {\n    axios.get(`/api/news/${id}`)\n        .then(res => { \n            const news = res.data;\n            dispatch({\n                type: SET_NEWS,\n                payload: news.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            });\n         });\n};\n\n//edit news\nexport const editNews = (id, newsData, history) => dispatch => {\n    axios.put(`/api/news/${id}`, newsData)\n        .then(\n            res => history.push('/feeds')\n        )\n        .catch(\n            err => dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n}\n\n// delete news\nexport const deleteNews = id => dispatch => {\n    axios.delete(`/api/news/${id}`)\n        .then(res =>\n            dispatch({\n                type: DELETE_NEWS,\n                payload: id\n            })\n        )\n        .catch(\n            err => dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n}","import axios from 'axios';\n\nimport { GET_ERRORS } from './types';\nimport { getNewsList, getNews } from './newsAction';\n\nexport const addLike = (newsId, userId, action = 'list') => dispatch => {\n    const likeData = {\n        news_id: newsId,\n        user_id: userId\n    };\n    axios.post(`/api/news/${newsId}/likes`, likeData)\n        .then(res => {\n            //if liked from list page, get all news list otherwise get particular news\n            if (action == 'list') {\n                dispatch(getNewsList())\n            } else {\n                dispatch(getNews(newsId))\n            }\n        })\n        .catch(\n            err => dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n}\n\n// delete comment\nexport const removeLike = (newsId, likeId, action='list') => dispatch => {\n    axios.delete(`/api/news/${newsId}/likes/${likeId}`)\n        .then(res =>{\n            if (action == 'list') {\n                dispatch(getNewsList())\n            } else {\n                dispatch(getNews(newsId))\n            }\n        })\n        .catch(\n            err => dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nimport { deleteNews } from '../../actions/newsAction';\nimport { addLike, removeLike } from '../../actions/likeAction';\n\nclass NewsItem extends Component {\n\n    // like or dislike news when like button is clicked\n    onLikeClick(newsId, userId, isNewsLiked, likeId) {\n        if (!isNewsLiked) {\n            this.props.addLike(newsId, userId);\n        } else {\n            this.props.removeLike(newsId, likeId);\n        }\n    }\n\n    //check if current user liked the news\n    findUserLike(likes) {\n        const { auth } = this.props;\n        if (Object.values(likes).includes(auth.user.id)) {\n            return true;\n        }\n        return false\n    }\n\n    onDeleteClick(id) {\n        if (window.confirm('Are you sure you want to delete the news item')) {\n            this.props.deleteNews(id);\n        }\n    }\n\n    render() {\n        const { news, auth } = this.props;\n        const isNewsLiked = this.findUserLike(news.likes);\n        let likeId = 0;\n        if (isNewsLiked) {\n            likeId = Object.keys(news.likes).find(key => news.likes[key] == auth.user.id);\n        }\n        return (\n            <div className=\"card card-body bg-light mb-3\">\n                <div className=\"news-title\">\n                    <a className=\"news-link\" href={news.link} target=\"_blank\" rel=\"noopener noreferrer\">{news.title}</a>\n                    <span className=\"news-source ml-3\">({news.source})</span>\n                </div>\n                <div className=\"news-info\">\n                    <a href=\"#\" className=\"news-like news-action\" onClick={this.onLikeClick.bind(this, news.id, auth.user.id, isNewsLiked, likeId)}>\n                        <i className={classnames('fas fa-thumbs-up', {\n                            'text-info': isNewsLiked\n                        })} />\n                        { Object.keys(news.likes).length > 0 ? (\n                            <span className=\"badge badge-dark ml-2\">{Object.keys(news.likes).length}</span>\n                        ) : null}\n                    </a>\n                    <Link to={`/news/${news.id}/comments`} className=\"news-comment news-action mx-5\">\n                        Comment\n                        {news.comments > 0 ? (\n                            <span className=\"badge badge-dark ml-2\">{news.comments}</span>\n                        ) : null}\n                    </Link>\n                    <span className=\"news-poster mr-3\">\n                        Posted by ({news.user}) <Moment fromNow>{news.updated_at}</Moment>\n                    </span>\n                    {\n                        // if posted by same user, allow edit and delete\n                        news.user_id === auth.user.id ? (\n                            <span className=\"actions float-right\">\n                                <Link className=\"news-edit news-action mr-2\" to={`/news/${news.id}/edit`}>\n                                    <i className=\"fas fa-edit\" />\n                                </Link>\n                                <a href=\"#\" onClick={this.onDeleteClick.bind(this, news.id)} className=\"news-delete news-action\">\n                                    <i className=\"fas fa-times\" />\n                                </a>\n                            </span>\n                        ): null\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nNewsItem.propTypes = {\n    news: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    deleteNews: PropTypes.func.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, {deleteNews, addLike, removeLike})(NewsItem);","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getNewsList } from '../../actions/newsAction';\nimport NewsItem from './NewsItem';\n\nclass Feeds extends Component {\n    componentDidMount() {\n        this.props.getNewsList();\n    }\n    render() {\n        const { newsList } = this.props;\n        let newsItems;\n        if (newsList && newsList.length > 0) {\n            newsItems = newsList.map(item => (\n                <NewsItem key={item.id} news={item}/>\n            ));\n        } else {\n            newsItems = (\n                <h4>No news item yet!</h4>\n            );\n        }\n        return (\n            <div className=\"news-list row\">\n                <div className=\"col-md-12\">\n                    <h2 className=\"text-center\">News listings</h2>\n                    {newsItems}\n                </div>\n            </div>\n        )\n    }\n}\n\nFeeds.propTypes = {\n    newsList: PropTypes.array,\n    getNewsList: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    newsList: state.news.newsList\n});\n\nexport default connect(mapStateToProps, {getNewsList})(Feeds);","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst HiddenInput = ({\n    name,\n    value,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"hidden-input\">\n            <input\n                type=\"hidden\"\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                name={name}\n                value={value}\n                onChange={onChange}\n            />\n        </div>\n    )\n}\n\nHiddenInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    error: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n\n\nexport default HiddenInput;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport HiddenInput from '../common/HiddenInput';\nimport { addNews, editNews, getNews } from '../../actions/newsAction';\nimport isEmpty from '../../validatons/isEmpty';\n\nclass NewsForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_id: props.user.id,\n            title: '',\n            link: '',\n            source: '',\n            errors: {},\n            buttonTxt: 'Add news'\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(event) {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        const newsData = {\n            user_id: this.state.user_id,\n            title: this.state.title,\n            source: this.state.source,\n            link: this.state.link\n        };\n        // handle route based on the action prop of component\n        if (this.props.action === 'edit') {\n            const newsId = this.props.match.params.id;\n            this.props.editNews(newsId, newsData, this.props.history);\n        } else {\n            this.props.addNews(newsData, this.props.history);\n        }\n    }\n\n    componentDidMount() {\n        //get news if edit action\n        if (this.props.action === 'edit') {\n            const newsId = this.props.match.params.id;\n            this.props.getNews(newsId);\n        }\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n        if (nextProps.news) {\n            // in case of edit news, get news from props and add to state\n            const news = nextProps.news;\n            news.user_id = !isEmpty(news.user_id) ? news.user_id : '';\n            news.title = !isEmpty(news.title) ? news.title : '';\n            news.link = !isEmpty(news.link) ? news.link : '';\n            news.source = !isEmpty(news.source) ? news.source : '';\n            this.setState({\n                user_id: news.user_id,\n                title: news.title,\n                source: news.source,\n                link: news.link, \n                buttonTxt: 'Edit news'\n            });\n        }\n    }\n\n    render() {\n        const { errors } = this.props;\n        return (\n            <div className=\"news-form\">\n                <form onSubmit={this.onSubmit}>\n                    <HiddenInput\n                        name=\"user_id\"\n                        value={this.state.user_id}\n                        onChange={this.onChange}\n                        error={errors.user_id}\n                        />  \n                    <TextFieldGroup\n                        type=\"text\"\n                        id=\"title\"\n                        placeholder=\"Enter Title\"\n                        name=\"title\"\n                        value={this.state.title}\n                        onChange={this.onChange}\n                        error={errors.title}\n                        label=\"Title\"\n                        />                                \n                    <TextFieldGroup\n                        type=\"text\"\n                        id=\"link\"\n                        placeholder=\"Enter Link\"\n                        name=\"link\"\n                        value={this.state.link}\n                        onChange={this.onChange}\n                        error={errors.link}\n                        label=\"Link\"\n                    />\n                    <TextFieldGroup\n                        type=\"text\"\n                        id=\"source\"\n                        placeholder=\"Enter Source\"\n                        name=\"source\"\n                        value={this.state.source}\n                        onChange={this.onChange}\n                        error={errors.source}\n                        label=\"Source\"\n                    />\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\">{ this.state.buttonTxt }</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nNewsForm.propTypes = {\n    addNews: PropTypes.func.isRequired,\n    editNews: PropTypes.func.isRequired,\n    getNews: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    errors: state.errors,\n    user: state.auth.user,\n    news: state.news.news\n});\n\n//set default action to 'add' news\nNewsForm.defaultProps = {\n    action: 'add'\n};\n\nexport default connect(mapStateToProps, {addNews, editNews, getNews})(withRouter(NewsForm));","import React, { Component } from 'react';\n\nimport NewsForm from './NewsForm';\n\nclass AddNews extends Component {\n    render() {\n        return (\n            <div className=\"add-news row\">\n                <div className=\"col-md-8 m-auto\">\n                    <h2 className=\"text-center\">Add News</h2>\n                    <NewsForm />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddNews;","import React, { Component } from 'react';\n\nimport NewsForm from './NewsForm';\n\nclass EditNews extends Component {\n    render() {\n        return (\n            <div className=\"edit-news row\">\n                <div className=\"col-md-8 m-auto\">\n                    <h2 className=\"text-center\">Edit News</h2>\n                    <NewsForm action=\"edit\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditNews;","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextAreaFieldGroup = ({\n    name,\n    placeholder,\n    value,\n    error,\n    info,\n    onChange\n}) => {\n    return (\n        <div className=\"form-group\">\n            <textarea\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                name={name}\n                value={value}\n                onChange={onChange}\n            />\n            {info && (<small className=\"form-text text-muted\">{info}</small>)}\n            {error && (<div className=\"invalid-feedback\">{error}</div>)}\n        </div>\n    )\n}\n\nTextAreaFieldGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    error: PropTypes.string,\n    info: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n\n\nexport default TextAreaFieldGroup;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\n\nimport { deleteComment } from '../../actions/commentAction';\n\nclass CommentItem extends Component {\n    onDeleteClick(news_id, comment_id) {\n        if (window.confirm('Are you sure you want to delete the comment')) {\n            this.props.deleteComment(news_id, comment_id);\n        }\n    }\n    render() {\n        const { comment, currentUserId } = this.props;\n        return (\n            <div className=\"comment-item\">\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item mb-2\">\n                        <span className=\"comment-user\">{comment.user.username}</span> says:&nbsp;\n                        <span className=\"comment-text\">{comment.comment}</span>\n                        {\n                            comment.user_id === currentUserId ? (\n                                <span className=\"comment-actions float-right\">\n                                    <a href=\"#\" onClick={this.onDeleteClick.bind(this, comment.news_id, comment.id)} className=\"comment-delete news-action\">\n                                        <i className=\"fas fa-times\" />\n                                    </a>\n                                </span>\n                            ) : null\n                        }\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { deleteComment })(CommentItem);","import axios from 'axios';\n\nimport { SET_COMMENT, GET_ERRORS, DELETE_COMMENT } from './types';\n\nexport const addComment = commentData => dispatch => {\n    axios.post(`/api/news/${commentData.news_id}/comments`, commentData)\n        .then(\n            res => dispatch({\n                type: SET_COMMENT,\n                payload: res.data.data\n            })\n        )\n        .catch(\n            err => dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n}\n\n// delete comment\nexport const deleteComment = (news_id, comment_id) => dispatch => {\n    axios.delete(`/api/news/${news_id}/comments/${comment_id}`)\n        .then(res =>\n            dispatch({\n                type: DELETE_COMMENT,\n                payload: comment_id\n            })\n        )\n        .catch(\n            err => dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nimport { getNews } from '../../actions/newsAction';\nimport { addComment } from '../../actions/commentAction';\nimport { addLike, removeLike } from '../../actions/likeAction';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport HiddenInput from '../common/HiddenInput';\nimport CommentItem from './CommentItem';\n\nclass Comments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            news_id: '',\n            user_id: '',\n            title: '',\n            link: '',\n            source: '',\n            comment: '',\n            comments: {},\n            user: {},\n            updated_at: '',\n            errors: {},\n            news: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentDidMount() {\n        const newsId = this.props.match.params.id;\n        this.props.getNews(newsId);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { news, errors, user } = nextProps;\n\n        if (errors) {\n            this.setState({errors})\n        }\n        if (nextProps.news) {\n            this.setState({\n                news_id: news.id,\n                user_id: user.id,\n                title: news.title,\n                link: news.link,\n                source: news.source,\n                comments: news.comments,\n                user: news.user,\n                updated_at: news.updated_at,\n                news\n            });\n        }\n    }\n\n    onChange(event) {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        const commentData = {\n            user_id: this.state.user_id,\n            news_id: this.state.news_id,\n            comment: this.state.comment\n        };\n        this.props.addComment(commentData);\n        this.state.comment = '';\n    }\n\n    // like or dislike the news when like button is clicked\n    onLikeClick(newsId, userId, isNewsLiked, likeId) {\n        if (!isNewsLiked) {\n            this.props.addLike(newsId, userId, 'show');\n        } else {\n            this.props.removeLike(newsId, likeId, 'show');\n        }\n    }\n\n    // find if the current user liked the news\n    findUserLike(likes) {\n        const { user } = this.props;\n        if (likes && Object.values(likes).includes(user.id)) {\n            return true;\n        }\n        return false\n    }\n\n    render() {\n        const { errors, user } = this.props;\n        const comments = this.state.comments;\n        const isNewsLiked = this.findUserLike(this.state.news.likes);\n        let likeId = 0;\n        if (isNewsLiked) {\n            likeId = Object.keys(this.state.news.likes).find(key => this.state.news.likes[key] == user.id);\n        }\n        let commentsList;\n        if (comments && comments.length > 0) {\n            commentsList = comments.map(item => (\n                <CommentItem key={item.id} comment={item} currentUserId={user.id}/>\n            ));\n        } else {\n            commentsList = (\n                <h4>No comments yet!</h4>\n            );\n        }\n        return (\n            <div className=\"card card-body bg-light my-3\">\n                <div className=\"news-title\">\n                    <a className=\"news-link\" href={this.state.link} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.title}</a>\n                    <span className=\"news-source ml-3\">({this.state.source})</span>\n                </div>\n                <div className=\"news-info\">\n                    <a href=\"#\" className=\"news-like news-action\" onClick={this.onLikeClick.bind(this, this.state.news_id, this.state.user_id, isNewsLiked, likeId)}>\n                        <i className={classnames('fas fa-thumbs-up', {\n                            'text-info': isNewsLiked\n                        })} />\n                        { (this.state.news.likes && Object.values(this.state.news.likes).length > 0) ? (\n                            <span className=\"badge badge-dark ml-2\">{Object.values(this.state.news.likes).length}</span>\n                        ) : null}\n                    </a>\n                    <span className=\"news-comment news-action mx-5\">\n                        Comment\n                        {this.state.comments.length > 0 ? (\n                            <span className=\"badge badge-dark ml-2\">{this.state.comments.length}</span>\n                        ) : null}\n                    </span>\n                    <span className=\"news-poster mr-3\">\n                        Posted by ({this.state.user.username}) <Moment fromNow>{this.state.updated_at}</Moment>\n                    </span>\n                </div>\n                <hr/>\n                <div className=\"comment-box mt-3\">\n                    <form onSubmit={this.onSubmit}>\n                        <HiddenInput\n                            name=\"news_id\"\n                            value={this.state.news_id}\n                            onChange={this.onChange}\n                            error={errors.news_id}\n                        />  \n                        <HiddenInput\n                            name=\"user_id\"\n                            value={this.state.user_id}\n                            onChange={this.onChange}\n                            error={errors.user_id}\n                        />  \n                        <TextAreaFieldGroup\n                            placeholder=\"Give some comment\"\n                            name=\"comment\"\n                            value={this.state.comment}\n                            onChange={this.onChange}\n                            error={errors.comment}\n                            label=\"Comment\"\n                        />\n                        <button type=\"submit\" className=\"btn btn-primary btn-sm float-right\">Comment</button>\n                    </form>\n                </div>\n                <hr/>\n                { commentsList }\n            </div>\n        )\n    }\n}\n\nComments.propTypes = {\n    user: PropTypes.object.isRequired,\n    news: PropTypes.object,\n    errors: PropTypes.object.isRequired,\n    getNews: PropTypes.func.isRequired,\n    addComment: PropTypes.func.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    user: state.auth.user,\n    news: state.news.news,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {getNews, addComment, addLike, removeLike})(Comments);","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode';\n\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\n\nimport './App.css';\nimport store from './store';\nimport PrivateRoute from './components/common/PrivateRoute';\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Feeds from './components/news/Feeds';\nimport AddNews from './components/news/AddNews';\nimport EditNews from './components/news/EditNews';\nimport Comments from './components/comments/Comments';\n\n//check for auth tokens\nif (localStorage.jwtToken) {\n  //set authorization token in request header\n  setAuthToken(localStorage.jwtToken);\n  //decode jwt token\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  //check for expired tokens\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    //logout user\n    store.dispatch(logoutUser());\n    //redirect to login\n    window.location.href = '/login';\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={ store }>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <div className=\"container page-wrapper\">\n            <Route exact path=\"/(|feeds)/\" component={Feeds} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Switch>\n              <PrivateRoute exact path=\"/news/create\" component={AddNews}/>\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/news/:id/edit\" component={EditNews}/>\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/news/:id/comments\" component={Comments}/>\n            </Switch>\n          </div>\n          <Footer/>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}